VERSION 5.00
Begin VB.PropertyPage PPRichTextBoxGeneral 
   Caption         =   "General"
   ClientHeight    =   4350
   ClientLeft      =   0
   ClientTop       =   0
   ClientWidth     =   6450
   LockControls    =   -1  'True
   PaletteMode     =   0  'Halftone
   ScaleHeight     =   4350
   ScaleWidth      =   6450
   Begin VB.ComboBox ComboIMEMode 
      Height          =   315
      Left            =   1800
      Style           =   2  'Dropdown List
      TabIndex        =   20
      Top             =   3360
      Width           =   2235
   End
   Begin VB.TextBox TextUndoLimit 
      Height          =   315
      Left            =   1800
      TabIndex        =   18
      Top             =   3000
      Width           =   2235
   End
   Begin VB.ComboBox ComboTextMode 
      Height          =   315
      Left            =   1800
      Style           =   2  'Dropdown List
      TabIndex        =   16
      Top             =   2640
      Width           =   2235
   End
   Begin VB.TextBox TextBulletIndent 
      Height          =   315
      Left            =   1800
      TabIndex        =   14
      Top             =   2280
      Width           =   2235
   End
   Begin VB.ComboBox ComboScrollBars 
      Height          =   315
      Left            =   1800
      Style           =   2  'Dropdown List
      TabIndex        =   12
      Top             =   1920
      Width           =   2235
   End
   Begin VB.TextBox TextMaxLength 
      Height          =   315
      Left            =   1800
      TabIndex        =   10
      Top             =   1560
      Width           =   2235
   End
   Begin VB.TextBox TextPasswordChar 
      Height          =   315
      Left            =   1800
      TabIndex        =   8
      Top             =   1200
      Width           =   2235
   End
   Begin VB.CheckBox CheckSelectionBar 
      Caption         =   "SelectionBar"
      Height          =   285
      Left            =   4200
      TabIndex        =   29
      Top             =   3720
      Width           =   2160
   End
   Begin VB.CheckBox CheckAutoURLDetect 
      Caption         =   "AutoURLDetect"
      Height          =   285
      Left            =   4200
      TabIndex        =   28
      Top             =   3360
      Width           =   2160
   End
   Begin VB.CheckBox CheckDisableNoScroll 
      Caption         =   "DisableNoScroll"
      Height          =   285
      Left            =   4200
      TabIndex        =   27
      Top             =   3000
      Width           =   2160
   End
   Begin VB.CheckBox CheckWantReturn 
      Caption         =   "WantReturn"
      Height          =   285
      Left            =   4200
      TabIndex        =   26
      Top             =   2640
      Width           =   2160
   End
   Begin VB.CheckBox CheckMultiLine 
      Caption         =   "MultiLine"
      Height          =   285
      Left            =   4200
      TabIndex        =   25
      Top             =   2280
      Width           =   2160
   End
   Begin VB.CheckBox CheckUseSystemPasswordChar 
      Caption         =   "UseSystemPasswordChar"
      Height          =   285
      Left            =   4200
      TabIndex        =   24
      Top             =   1920
      Width           =   2160
   End
   Begin VB.CheckBox CheckHideSelection 
      Caption         =   "HideSelection"
      Height          =   285
      Left            =   4200
      TabIndex        =   23
      Top             =   1560
      Width           =   2160
   End
   Begin VB.CheckBox CheckLocked 
      Caption         =   "Locked"
      Height          =   285
      Left            =   4200
      TabIndex        =   22
      Top             =   1200
      Width           =   2160
   End
   Begin VB.CheckBox CheckOLEDragDrop 
      Caption         =   "OLEDragDrop"
      Height          =   285
      Left            =   4200
      TabIndex        =   21
      Top             =   840
      Width           =   2160
   End
   Begin VB.ComboBox ComboMousePointer 
      Height          =   315
      Left            =   1800
      Style           =   2  'Dropdown List
      TabIndex        =   6
      Top             =   840
      Width           =   2235
   End
   Begin VB.CommandButton CommandFileName 
      Caption         =   "..."
      Height          =   315
      Left            =   6000
      TabIndex        =   4
      Top             =   480
      Width           =   330
   End
   Begin VB.TextBox TextFileName 
      Height          =   315
      Left            =   1800
      TabIndex        =   3
      Top             =   480
      Width           =   4140
   End
   Begin VB.CheckBox CheckVisualStyles 
      Caption         =   "VisualStyles"
      Height          =   285
      Left            =   1800
      TabIndex        =   1
      Top             =   120
      Width           =   1620
   End
   Begin VB.CheckBox CheckEnabled 
      Caption         =   "Enabled"
      Height          =   285
      Left            =   120
      TabIndex        =   0
      Top             =   120
      Width           =   1620
   End
   Begin VB.Label LabelIMEMode 
      Caption         =   "IMEMode:"
      Height          =   240
      Left            =   120
      TabIndex        =   19
      Top             =   3360
      Width           =   1620
   End
   Begin VB.Label LabelUndoLimit 
      Caption         =   "UndoLimit:"
      Height          =   240
      Left            =   120
      TabIndex        =   17
      Top             =   3000
      Width           =   1620
   End
   Begin VB.Label LabelTextMode 
      Caption         =   "TextMode:"
      Height          =   240
      Left            =   120
      TabIndex        =   15
      Top             =   2640
      Width           =   1620
   End
   Begin VB.Label LabelBulletIndent 
      Caption         =   "BulletIndent:"
      Height          =   240
      Left            =   120
      TabIndex        =   13
      Top             =   2280
      Width           =   1620
   End
   Begin VB.Label LabelScrollBars 
      Caption         =   "ScrollBars:"
      Height          =   240
      Left            =   120
      TabIndex        =   11
      Top             =   1920
      Width           =   1620
   End
   Begin VB.Label LabelMaxLength 
      Caption         =   "MaxLength:"
      Height          =   240
      Left            =   120
      TabIndex        =   9
      Top             =   1560
      Width           =   1620
   End
   Begin VB.Label LabelPasswordChar 
      Caption         =   "PasswordChar:"
      Height          =   240
      Left            =   120
      TabIndex        =   7
      Top             =   1200
      Width           =   1620
   End
   Begin VB.Label LabelMousePointer 
      Caption         =   "MousePointer:"
      Height          =   240
      Left            =   120
      TabIndex        =   5
      Top             =   840
      Width           =   1620
   End
   Begin VB.Label LabelFileName 
      Caption         =   "FileName: [load from]"
      Height          =   240
      Left            =   120
      TabIndex        =   2
      Top             =   480
      Width           =   1620
   End
End
Attribute VB_Name = "PPRichTextBoxGeneral"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Option Explicit
Private FreezeChanged As Boolean

Private Sub PropertyPage_Initialize()
Call ComCtlsShowAllUIStates(PropertyPage.hWnd)
Call ComCtlsPPInitComboMousePointer(ComboMousePointer)
With ComboScrollBars
.AddItem vbSBNone & " - None"
.ItemData(.NewIndex) = vbSBNone
.AddItem vbHorizontal & " - Horizontal"
.ItemData(.NewIndex) = vbHorizontal
.AddItem vbVertical & " - Vertical"
.ItemData(.NewIndex) = vbVertical
.AddItem vbBoth & " - Both"
.ItemData(.NewIndex) = vbBoth
End With
With ComboTextMode
.AddItem RtfTextModeRichText & " - RichText"
.ItemData(.NewIndex) = RtfTextModeRichText
.AddItem RtfTextModePlainText & " - PlainText"
.ItemData(.NewIndex) = RtfTextModePlainText
End With
Call ComCtlsPPInitComboIMEMode(ComboIMEMode)
End Sub

Private Sub PropertyPage_ApplyChanges()
On Error Resume Next
PropertyPage.ValidateControls
If Err.Number = 380 Then Exit Sub
On Error GoTo 0
If Not TextFileName.Text = vbNullString Then
    If FileExists(TextFileName.Text) = False Then
        MsgBox "The specified file name cannot be accessed or is invalid.", vbExclamation + vbOKOnly
        TextFileName.SetFocus
        TextFileName.SelStart = 0
        TextFileName.SelLength = Len(TextFileName.Text)
        PropertyPage.Changed = True
        Exit Sub
    End If
End If
With PropertyPage.SelectedControls(0)
.Enabled = CBool(CheckEnabled.Value = vbChecked)
.VisualStyles = CBool(CheckVisualStyles.Value = vbChecked)
.MousePointer = ComboMousePointer.ItemData(ComboMousePointer.ListIndex)
.PasswordChar = TextPasswordChar.Text
.MaxLength = CLng(TextMaxLength.Text)
.ScrollBars = ComboScrollBars.ItemData(ComboScrollBars.ListIndex)
.BulletIndent = CSng(TextBulletIndent.Text)
If .TextMode <> ComboTextMode.ItemData(ComboTextMode.ListIndex) Then .TextMode = ComboTextMode.ItemData(ComboTextMode.ListIndex)
.UndoLimit = CLng(TextUndoLimit.Text)
.IMEMode = ComboIMEMode.ItemData(ComboIMEMode.ListIndex)
.OLEDragDrop = CBool(CheckOLEDragDrop.Value = vbChecked)
.Locked = CBool(CheckLocked.Value = vbChecked)
.HideSelection = CBool(CheckHideSelection.Value = vbChecked)
.UseSystemPasswordChar = CBool(CheckUseSystemPasswordChar.Value = vbChecked)
.MultiLine = CBool(CheckMultiLine.Value = vbChecked)
.WantReturn = CBool(CheckWantReturn.Value = vbChecked)
.DisableNoScroll = CBool(CheckDisableNoScroll.Value = vbChecked)
.AutoURLDetect = CBool(CheckAutoURLDetect.Value = vbChecked)
.SelectionBar = CBool(CheckSelectionBar.Value = vbChecked)
If Not .FileName = TextFileName.Text Or Not TextFileName.Text = vbNullString Then .FileName = TextFileName.Text
End With
Call PropertyPage_SelectionChanged
End Sub

Private Sub PropertyPage_SelectionChanged()
Dim i As Long
FreezeChanged = True
With PropertyPage.SelectedControls(0)
CheckEnabled.Value = IIf(.Enabled = True, vbChecked, vbUnchecked)
CheckVisualStyles.Value = IIf(.VisualStyles = True, vbChecked, vbUnchecked)
For i = 0 To ComboMousePointer.ListCount - 1
    If ComboMousePointer.ItemData(i) = .MousePointer Then
        ComboMousePointer.ListIndex = i
        Exit For
    End If
Next i
TextPasswordChar.Text = .PasswordChar
TextMaxLength.Text = .MaxLength
For i = 0 To ComboScrollBars.ListCount - 1
    If ComboScrollBars.ItemData(i) = .ScrollBars Then
        ComboScrollBars.ListIndex = i
        Exit For
    End If
Next i
TextBulletIndent.Text = CStr(.BulletIndent)
For i = 0 To ComboTextMode.ListCount - 1
    If ComboTextMode.ItemData(i) = .TextMode Then
        ComboTextMode.ListIndex = i
        Exit For
    End If
Next i
TextUndoLimit.Text = CStr(.UndoLimit)
For i = 0 To ComboIMEMode.ListCount - 1
    If ComboIMEMode.ItemData(i) = .IMEMode Then
        ComboIMEMode.ListIndex = i
        Exit For
    End If
Next i
CheckOLEDragDrop.Value = IIf(.OLEDragDrop = True, vbChecked, vbUnchecked)
CheckLocked.Value = IIf(.Locked = True, vbChecked, vbUnchecked)
CheckHideSelection.Value = IIf(.HideSelection = True, vbChecked, vbUnchecked)
CheckUseSystemPasswordChar.Value = IIf(.UseSystemPasswordChar = True, vbChecked, vbUnchecked)
CheckMultiLine.Value = IIf(.MultiLine = True, vbChecked, vbUnchecked)
CheckWantReturn.Value = IIf(.WantReturn = True, vbChecked, vbUnchecked)
CheckDisableNoScroll.Value = IIf(.DisableNoScroll = True, vbChecked, vbUnchecked)
CheckAutoURLDetect.Value = IIf(.AutoURLDetect = True, vbChecked, vbUnchecked)
CheckSelectionBar.Value = IIf(.SelectionBar = True, vbChecked, vbUnchecked)
TextFileName.Text = .FileName
End With
FreezeChanged = False
End Sub

Private Sub PropertyPage_EditProperty(PropertyName As String)
If PropertyName = "FileName" Then Call CommandFileName_Click
End Sub

Private Sub CheckEnabled_Click()
If FreezeChanged = True Then Exit Sub
PropertyPage.Changed = True
End Sub

Private Sub CheckVisualStyles_Click()
If FreezeChanged = True Then Exit Sub
PropertyPage.Changed = True
End Sub

Private Sub TextFileName_GotFocus()
If Not TextFileName.SelStart = 0 Then Exit Sub
TextFileName.SelLength = Len(TextFileName.Text)
End Sub

Private Sub TextFileName_LostFocus()
TextFileName.SelStart = 0
End Sub

Private Sub TextFileName_Change()
If FreezeChanged = True Then Exit Sub
PropertyPage.Changed = True
End Sub

Private Sub CommandFileName_Click()
With New CommonDialog
.Flags = CdlOFNExplorer Or CdlOFNPathMustExist Or CdlOFNFileMustExist
.Filter = "Rich Text Files (*.RTF)|*.RTF|Text Files (*.TXT)|*.TXT"
.DialogTitle = "Select File"
If .ShowOpen = True Then
    TextFileName.Text = .FileName
    PropertyPage.Changed = True
End If
End With
End Sub

Private Sub ComboMousePointer_Click()
If FreezeChanged = True Then Exit Sub
PropertyPage.Changed = True
End Sub

Private Sub TextPasswordChar_GotFocus()
If Not TextPasswordChar.SelStart = 0 Then Exit Sub
TextPasswordChar.SelLength = Len(TextPasswordChar.Text)
End Sub

Private Sub TextPasswordChar_LostFocus()
TextPasswordChar.SelStart = 0
End Sub

Private Sub TextPasswordChar_Change()
If FreezeChanged = True Then Exit Sub
PropertyPage.Changed = True
End Sub

Private Sub TextPasswordChar_Validate(Cancel As Boolean)
If Not (TextPasswordChar.Text = vbNullString Or Len(TextPasswordChar.Text) = 0) And Not Len(TextPasswordChar.Text) = 1 Then
    MsgBox "Invalid property value", vbCritical + vbOKOnly
    TextPasswordChar.Text = PropertyPage.SelectedControls(0).PasswordChar
    TextPasswordChar.SetFocus
    Cancel = True
End If
End Sub

Private Sub TextMaxLength_GotFocus()
If Not TextMaxLength.SelStart = 0 Then Exit Sub
TextMaxLength.SelLength = Len(TextMaxLength.Text)
End Sub

Private Sub TextMaxLength_LostFocus()
TextMaxLength.SelStart = 0
End Sub

Private Sub TextMaxLength_Change()
If FreezeChanged = True Then Exit Sub
If TextMaxLength.Text = vbNullString Then
    TextMaxLength.Text = PropertyPage.SelectedControls(0).MaxLength
    TextMaxLength.SelStart = 0
    TextMaxLength.SelLength = Len(TextMaxLength.Text)
End If
PropertyPage.Changed = True
End Sub

Private Sub TextMaxLength_KeyPress(KeyAscii As Integer)
Call ComCtlsPPKeyPressOnlyNumeric(KeyAscii)
End Sub

Private Sub TextMaxLength_Validate(Cancel As Boolean)
If Not IsNumeric(TextMaxLength.Text) Then
    MsgBox "Invalid property value", vbCritical + vbOKOnly
    TextMaxLength.Text = PropertyPage.SelectedControls(0).MaxLength
    TextMaxLength.SetFocus
    Cancel = True
Else
    Dim LngValue As Long
    On Error Resume Next
    LngValue = CLng(TextMaxLength.Text)
    Cancel = CBool(Err.Number <> 0)
    On Error GoTo 0
    If LngValue < 0 Then Cancel = True
    If Cancel = False Then
        TextMaxLength.Text = LngValue
    Else
        MsgBox "Invalid property value", vbCritical + vbOKOnly
        TextMaxLength.Text = PropertyPage.SelectedControls(0).MaxLength
        TextMaxLength.SetFocus
    End If
End If
End Sub

Private Sub ComboScrollBars_Click()
If FreezeChanged = True Then Exit Sub
PropertyPage.Changed = True
End Sub

Private Sub TextBulletIndent_GotFocus()
If Not TextBulletIndent.SelStart = 0 Then Exit Sub
TextBulletIndent.SelLength = Len(TextBulletIndent.Text)
End Sub

Private Sub TextBulletIndent_LostFocus()
TextBulletIndent.SelStart = 0
End Sub

Private Sub TextBulletIndent_Change()
If FreezeChanged = True Then Exit Sub
If TextBulletIndent.Text = vbNullString Then
    TextBulletIndent.Text = PropertyPage.SelectedControls(0).BulletIndent
    TextBulletIndent.SelStart = 0
    TextBulletIndent.SelLength = Len(TextBulletIndent.Text)
End If
PropertyPage.Changed = True
End Sub

Private Sub TextBulletIndent_Validate(Cancel As Boolean)
If Not IsNumeric(TextBulletIndent.Text) Then
    MsgBox "Invalid property value", vbCritical + vbOKOnly
    TextBulletIndent.Text = PropertyPage.SelectedControls(0).BulletIndent
    TextBulletIndent.SetFocus
    Cancel = True
Else
    Dim SngValue As Single
    On Error Resume Next
    SngValue = CSng(TextBulletIndent.Text)
    Cancel = CBool(Err.Number <> 0)
    On Error GoTo 0
    If SngValue < 0 Then Cancel = True
    If Cancel = False Then
        TextBulletIndent.Text = SngValue
    Else
        MsgBox "Invalid property value", vbCritical + vbOKOnly
        TextBulletIndent.Text = PropertyPage.SelectedControls(0).BulletIndent
        TextBulletIndent.SetFocus
    End If
End If
End Sub

Private Sub ComboTextMode_Click()
If FreezeChanged = True Then Exit Sub
PropertyPage.Changed = True
End Sub

Private Sub TextUndoLimit_GotFocus()
If Not TextUndoLimit.SelStart = 0 Then Exit Sub
TextUndoLimit.SelLength = Len(TextUndoLimit.Text)
End Sub

Private Sub TextUndoLimit_LostFocus()
TextUndoLimit.SelStart = 0
End Sub

Private Sub TextUndoLimit_Change()
If FreezeChanged = True Then Exit Sub
If TextUndoLimit.Text = vbNullString Then
    TextUndoLimit.Text = PropertyPage.SelectedControls(0).UndoLimit
    TextUndoLimit.SelStart = 0
    TextUndoLimit.SelLength = Len(TextUndoLimit.Text)
End If
PropertyPage.Changed = True
End Sub

Private Sub TextUndoLimit_KeyPress(KeyAscii As Integer)
Call ComCtlsPPKeyPressOnlyNumeric(KeyAscii)
End Sub

Private Sub TextUndoLimit_Validate(Cancel As Boolean)
If Not IsNumeric(TextUndoLimit.Text) Then
    MsgBox "Invalid property value", vbCritical + vbOKOnly
    TextUndoLimit.Text = PropertyPage.SelectedControls(0).UndoLimit
    TextUndoLimit.SetFocus
    Cancel = True
Else
    Dim LngValue As Long
    On Error Resume Next
    LngValue = CLng(TextUndoLimit.Text)
    Cancel = CBool(Err.Number <> 0)
    On Error GoTo 0
    If LngValue < 0 Then Cancel = True
    If Cancel = False Then
        TextUndoLimit.Text = LngValue
    Else
        MsgBox "Invalid property value", vbCritical + vbOKOnly
        TextUndoLimit.Text = PropertyPage.SelectedControls(0).UndoLimit
        TextUndoLimit.SetFocus
    End If
End If
End Sub

Private Sub ComboIMEMode_Click()
If FreezeChanged = True Then Exit Sub
PropertyPage.Changed = True
End Sub

Private Sub CheckOLEDragDrop_Click()
If FreezeChanged = True Then Exit Sub
PropertyPage.Changed = True
End Sub

Private Sub CheckLocked_Click()
If FreezeChanged = True Then Exit Sub
PropertyPage.Changed = True
End Sub

Private Sub CheckHideSelection_Click()
If FreezeChanged = True Then Exit Sub
PropertyPage.Changed = True
End Sub

Private Sub CheckUseSystemPasswordChar_Click()
If FreezeChanged = True Then Exit Sub
PropertyPage.Changed = True
End Sub

Private Sub CheckMultiLine_Click()
If FreezeChanged = True Then Exit Sub
PropertyPage.Changed = True
End Sub

Private Sub CheckWantReturn_Click()
If FreezeChanged = True Then Exit Sub
PropertyPage.Changed = True
End Sub

Private Sub CheckDisableNoScroll_Click()
If FreezeChanged = True Then Exit Sub
PropertyPage.Changed = True
End Sub

Private Sub CheckAutoURLDetect_Click()
If FreezeChanged = True Then Exit Sub
PropertyPage.Changed = True
End Sub

Private Sub CheckSelectionBar_Click()
If FreezeChanged = True Then Exit Sub
PropertyPage.Changed = True
End Sub
